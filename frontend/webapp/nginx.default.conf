server {
  listen 80;
  server_name localhost;

  root /usr/share/nginx/html;
  index index.html index.htm;

  # Lidar com client-side routing do React Router
  location / {
    try_files $uri $uri/ /index.html;
  }

  # Proxy para o backend API Gateway
  # Todas as chamadas para /api/v1/* no frontend serão encaminhadas para o api_gateway_service
  # O nome 'api_gateway_service' deve ser resolvível na rede Docker (definido no docker-compose.yml)
  # A porta 8050 é a porta interna do container do api_gateway_service.
  location /api/v1/ {
    # Resolver o nome do serviço do gateway. Se estiver usando variáveis de ambiente para a URL do gateway:
    # set $api_gateway_url ${API_GATEWAY_INTERNAL_URL}; # Ex: http://api_gateway_service:8050
    # proxy_pass $api_gateway_url$request_uri; # Para manter o path após /api/v1/

    # Se o nome do serviço for fixo e resolvível na rede Docker:
    proxy_pass http://api_gateway_service:8050; # Remove /api/v1/ do path original

    # Para manter o path original /api/v1/ ao encaminhar para o backend:
    # proxy_pass http://api_gateway_service:8050/api/v1/;
    # Ou, de forma mais robusta, se o backend espera /api/v1/ no path:
    # location /api/v1 { # Sem a barra no final
    #   proxy_pass http://api_gateway_service:8050; # O request_uri é anexado.
    # }
    # Se o backend já tem /api/v1 em suas rotas e o gateway também,
    # e o frontend chama /api/v1/..., então o proxy_pass deve ser para a raiz do backend
    # e o path será mantido.
    # Ex: Frontend chama /api/v1/auth/login
    # Nginx recebe /api/v1/auth/login
    # proxy_pass http://api_gateway_service:8050;
    #   -> Requisita http://api_gateway_service:8050/api/v1/auth/login (correto)

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Configurações para WebSockets se o login ou outras features usarem
    # proxy_http_version 1.1;
    # proxy_set_header Upgrade $http_upgrade;
    # proxy_set_header Connection "upgrade";
  }

  # Opcional: Configurações de cache para assets estáticos
  location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
    expires 1y;
    add_header Cache-Control "public";
    try_files $uri =404;
  }
}
