# CSPMEXA Root .env.example
# Copie este arquivo para .env e preencha os valores necessários.

# --- Configurações de Banco de Dados (PostgreSQL) ---
# Usado por: postgres_auth_db, auth_service, policy_engine_service
AUTH_DB_USER=cspmexa_user
AUTH_DB_PASSWORD=your_secure_password_here
AUTH_DB_NAME=cspmexa_db
# Porta que o PostgreSQL será exposto NO SEU HOST (máquina local)
AUTH_DB_EXPOSED_PORT=5433

# --- Portas Expostas no Host para os Serviços ---
# Estas são as portas que você usará para acessar os serviços do seu browser ou outras ferramentas.
AUTH_SERVICE_PORT=8000
COLLECTOR_SERVICE_PORT=8001
POLICY_ENGINE_SERVICE_PORT=8002
API_GATEWAY_PORT=8050 # Ponto de entrada principal para a API
FRONTEND_PORT=3000     # Porta para acessar o frontend no browser

# --- Configurações de JWT (JSON Web Token) ---
# Usado por: auth_service, api_gateway_service
# IMPORTANTE: Deve ser uma chave longa, aleatória e secreta. Mantenha-a segura!
# Use, por exemplo, `openssl rand -hex 32` para gerar uma.
JWT_SECRET_KEY=
# Algoritmo JWT (default é HS256 se não especificado no api_gateway_service)
JWT_ALGORITHM=HS256
# Tempo de expiração do token de acesso em minutos (default 1440 = 1 dia)
ACCESS_TOKEN_EXPIRE_MINUTES=1440

# --- Configurações de OAuth do Google (para login no CSPMEXA) ---
# Usado por: auth_service
# Obtenha do Google Cloud Console para seu Cliente OAuth 2.0.
# O URI de Redirecionamento Autorizado no Google Console deve ser:
# http://localhost:8050/api/v1/auth/google/callback (aponta para o API Gateway)
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# --- Configurações de TOTP (para MFA no CSPMEXA) ---
# Usado por: auth_service
# Nome do emissor que aparecerá no app autenticador (ex: Google Authenticator)
TOTP_ISSUER_NAME=CSPMEXA

# --- Configurações do Cliente HTTP (para api_gateway_service) ---
# Timeout em segundos para requisições do API Gateway para serviços backend.
HTTP_CLIENT_TIMEOUT=60

# --- Credenciais para Provedores de Nuvem (usado pelo collector_service) ---

# AWS
AWS_REGION_NAME=us-east-1
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
# AWS_SESSION_TOKEN= # Se estiver usando credenciais temporárias

# Google Cloud Platform (GCP)
# Caminho NO SEU HOST para o arquivo JSON de credenciais da Service Account do GCP.
# Este arquivo será montado no container do collector_service.
# Exemplo: ./secrets/gcp-sa-key.json
GCP_CREDENTIALS_PATH_HOST=./secrets/gcp-credentials.json

# Google Workspace
# Caminho NO SEU HOST para o arquivo JSON da chave da Service Account do Google (a mesma ou outra SA do GCP).
# Esta SA deve ter delegação em todo o domínio no Google Workspace.
# Exemplo: ./secrets/gws-sa-key.json
GWS_SA_KEY_PATH_HOST=./secrets/gws-sa-key.json
# E-mail de um administrador do Google Workspace para impersonação pela Service Account.
GOOGLE_WORKSPACE_DELEGATED_ADMIN_EMAIL=
# ID do Cliente Google Workspace (opcional, default é 'my_customer').
GOOGLE_WORKSPACE_CUSTOMER_ID=my_customer

# Microsoft Azure
AZURE_SUBSCRIPTION_ID=
AZURE_TENANT_ID=
AZURE_CLIENT_ID=
AZURE_CLIENT_SECRET=

# Huawei Cloud
HUAWEICLOUD_SDK_AK=
HUAWEICLOUD_SDK_SK=
HUAWEICLOUD_SDK_PROJECT_ID= # Project ID para escopo de recursos
HUAWEICLOUD_SDK_DOMAIN_ID=  # Domain ID (Account ID) para IAM

# --- Modo de Desenvolvimento ---
# Define se os serviços Python (FastAPI/Uvicorn) devem rodar com --reload.
# Defina como 'true' para desenvolvimento para habilitar hot-reloading.
# Defina como 'false' ou omita para comportamento padrão (sem reload).
DEBUG_MODE=true

# --- Configurações do Frontend (Build Args) ---
# VITE_API_BASE_URL é passado como argumento de build para o Dockerfile do frontend.
# Se o Nginx no frontend for configurado para fazer proxy de /api para o api_gateway_service,
# então VITE_API_BASE_URL pode ser simplesmente /api/v1.
# Se o frontend precisa da URL completa (ex: http://localhost:8050/api/v1),
# certifique-se que a porta aqui corresponde a API_GATEWAY_PORT.
# A configuração atual no docker-compose.yml para frontend_webapp usa:
# VITE_API_BASE_URL: http://localhost:${API_GATEWAY_PORT:-8050}/api/v1
# Nenhuma variável extra no .env é necessária para isso, pois usa API_GATEWAY_PORT.
# Se você mudar a estratégia, pode precisar de uma variável aqui.
# Ex: FRONTEND_VITE_API_BASE_URL=/api/v1
