# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = alembic

# template for migration file names
# "%%(rev)s_%%(slug)s"
file_template = %%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
# defaults to the current working directory.
# prepend_sys_path = .

# timezone in which to render the date literal within the migration file
# as well as the filename.
# If specified, requires the python-dateutil library.
# value is a tzinfo value, e.g. "EST"
# timezone =

# title used in the alembic-version-not-found message
# project_title =

# the output encoding used when revision files are written
# output_encoding = utf-8

sqlalchemy.url = postgresql://user:password@host/dbname


[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision files.  See the documentation for further
# detail and examples.
#
# hooks =
#
# e.g.
# hooks = autopep8, my_hook
# autopep8.type = exec
# autopep8.entrypoint = autopep8
# autopep8.options = -i
#
# my_hook.type = python
# my_hook.entrypoint = myapp.alembic.hooks:my_hook
# my_hook.options =


[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
