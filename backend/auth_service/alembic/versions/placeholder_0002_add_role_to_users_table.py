"""add_role_to_users_table

Revision ID: placeholder_0002
Revises: placeholder_0001
Create Date: 2024-03-10 14:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'placeholder_0002'
down_revision: Union[str, None] = 'placeholder_0001'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('role', sa.String(), server_default='user', nullable=False))
    # O server_default só se aplica a novas inserções se o ORM não fornecer um valor.
    # Para garantir que as linhas existentes tenham o default E que o ORM use o default se não especificado:
    # 1. Definir o default no modelo SQLAlchemy (já feito: role = Column(String, default="user", nullable=False))
    # 2. Esta migração adiciona a coluna com server_default para o DB.
    # Se houver linhas existentes com NULL (o que não deveria acontecer se nullable=False desde o início,
    # mas se a coluna fosse adicionada como nullable e depois alterada), um UPDATE seria necessário.
    # Com nullable=False e server_default='user', novas linhas via SQL direto sem especificar 'role'
    # receberão 'user'. Linhas inseridas via SQLAlchemy usarão o default do modelo.
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'role')
    # ### end Alembic commands ###
